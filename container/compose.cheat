% docker, compose, snippet

# Redis docker compose definition
services:
  redis:
    image: redis:7.2.0-alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - ./redis.conf:/usr/local/etc/redis/redis.conf:ro
    command: "redis-server /usr/local/etc/redis/redis.conf"

# Postgres docker compose definition
services:
  postgres:
    image: postgres:13-alpine
    container_name: my-db
    volumes:
      - ./initdb.d:/docker-entrypoint-initdb.d
    healthcheck:
      test: psql postgres --command "SELECT 1" -U postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: <db>
    ports:
      - 5432:5432

# Localstack docker compose definition
services:
  localstack:
    container_name: localstack
    image: localstack/localstack:3.0.2
    environment:
      # https://docs.localstack.cloud/references/configuration/
      SERVICES: s3, sqs, dynamodb
      DEBUG: 1
    ports:
      - 4566:4566
      - 4510-4559:4510-4559
    volumes:
      # script to be executed when localstack is ready, see https://docs.localstack.cloud/references/init-hooks/
      - "./ready.d:/etc/localstack/init/ready.d:ro"
      - /var/run/docker.sock:/var/run/docker.sock

# Kafka docker compose definition
services:
  zk:
    image: confluentinc/cp-zookeeper:7.4.1
    container_name: zk
    ports:
      - 2181:2181
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    healthcheck:
      test: ["CMD", "echo", "healthy"]
      start_period: 5s
      interval: 5s

  kafka:
    image: confluentinc/cp-kafka:7.4.1
    container_name: kafka
    depends_on:
      zk:
        condition: service_started
    ports:
      - 9092:9092
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zk:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: "if [[ $(kafka-topics --bootstrap-server localhost:9092 --list | sed '/^[[:blank:]]*$/ d' | wc -l) == 0 ]]; then crash_on_purpose; fi"
      start_period: 15s
      interval: 20s

  kafka-setup:
    image: confluentinc/cp-kafka:7.4.1
    container_name: kafka-setup
    depends_on:
      kafka:
        condition: service_started
    command: "bash -c 'echo Waiting for Kafka to be ready... && \
                       cub kafka-ready -b kafka:29092 1 20 && \
                       kafka-topics --create --if-not-exists --bootstrap-server kafka:29092 --partitions 1 --replication-factor 1 --topic <topic>'"
    environment:
      # The following settings are listed here only to satisfy the image's requirements.
      # We override the image's `command` anyways, hence this container will not start a broker.
      KAFKA_BROKER_ID: ignored
      KAFKA_ZOOKEEPER_CONNECT: ignored

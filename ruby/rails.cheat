% ruby, rails

# Execute rails tests of a file
bundle exec rails test <test_file>

# Execute rails one test of a file
bundle exec rails test <test_file>:<line_number>

$ test_file: find . -type f -name '*_test.rb'

% ruby, rails, minitest, snippet

# Test numeric difference between the return value of an expression as a result of what is evaluated in the yielded block.
assert_difference(expressions, difference = 1, message = nil) {...}

# Asserts that the numeric result of evaluating an expression is not changed before and after invoking the passed in block.
assert_no_difference(expressions, message = nil, &block)

# Test that the result of evaluating an expression is changed after invoking the passed in block.
assert_changes(expressions, message = nil, from:, to:, &block)

# Test the result of evaluating an expression is not changed after invoking the passed in block.
assert_no_changes(expressions, message = nil, &block)

# Ensures that the given block doesn't raise any exceptions.
assert_nothing_raised { block }

# Asserts that the routing of the given path was handled correctly and that the parsed options (given in the expected_options hash) match path. Basically, it asserts that Rails recognizes the route given by expected_options.
assert_recognizes(expected_options, path, extras={}, message=nil)

# Asserts that the provided options can be used to generate the provided path. This is the inverse of assert_recognizes. The extras parameter is used to tell the request the names and values of additional request parameters that would be in a query string. The message parameter allows you to specify a custom error message for assertion failures.
assert_generates(expected_path, options, defaults={}, extras = {}, message=nil)

# Asserts that the response comes with a specific status code. You can specify :success to indicate 200-299, :redirect to indicate 300-399, :missing to indicate 404, or :error to match the 500-599 range. You can also pass an explicit status number or its symbolic equivalent. For more information, see full list of status codes and how their mapping works.
assert_response(type, message = nil)

# Asserts that the response is a redirect to a URL matching the given options. You can also pass named routes such as assert_redirected_to root_path and Active Record objects such as assert_redirected_to @article.
assert_redirected_to(options = {}, message=nil)

# Asserts that &block generates an int number of SQL queries.
assert_queries_count(count = nil, include_schema: false, &block)

# Asserts that &block generates no SQL queries.
assert_no_queries(include_schema: false, &block)

# Asserts that &block generates SQL queries that match the pattern.
assert_queries_match(pattern, count: nil, include_schema: false, &block)

# Asserts that &block generates no SQL queries that match the pattern.
assert_no_queries_match(pattern, &block)


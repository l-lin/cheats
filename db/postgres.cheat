% postgres

# Open Postgres interactive shell
pgcli -h <host> -p 5432 -U <user> <db>

# Check last value of a sequence
SELECT LAST_VALUE FROM <sequence_name>;

# Set sequence value
SELECT setval('<sequence_name>', <sequence_new_value>, true);

# Generate random values
WITH r AS (
  SELECT idx, FLOOR((RANDOM() * 4)) AS x
  FROM GENERATE_SERIES(1, 10000000) AS idx
)
INSERT INTO acquisition
   SELECT
     r.idx,
     CASE r.x
       WHEN 0 THEN 'foo'
       WHEN 1 THEN 'bar'
       WHEN 2 THEN 'popo'
       WHEN 3 THEN 'toto'
     END || r.idx
   FROM r

# Export output to CSV
\COPY (SELECT * FROM foobar WHERE start_time > '2023-01-01') TO '/output.csv' CSV HEADER;

# Create temporary table
CREATE TEMPORARY TABLE foobar (
  id text,
  start_time timestamp
);

$ host: cat ${HOME}/.pgpass | awk -F':' '{ print $1 }' | sort | uniq
$ user: cat ${HOME}/.pgpass | awk -F':' '{ print $4 }' | sort | uniq
$ db: cat ${HOME}/.pgpass | awk -F':' '{ print $3 }' | sort | uniq

% postgres, local

# Start local postgresql
docker run -it -d --rm \
  --name postgres \
  -e POSTGRES_USER=<user> \
  -e POSTGRES_PASSWORD=<password> \
  -e POSTGRES_DB=<db> \
  -p <published_port>:5432 \
  postgres:12.7-alpine

$ published_port: echo -e '5432\n'
$ user: echo -e 'postgres\n'
$ password: echo -e 'postgres\n'
$ db: echo -e 'db\n'

% nix, nixos

# Apply NixOS system configuration with flake from current directory
sudo nixos-rebuild switch --flake '.#<username>'

# Generate hardware configuration
sudo nixos-generate-config --show-hardware-config

# Update flake
nix flake update

$ username: echo -e 'l-lin\n'

% nix, nix-shell

# Open a new nix-shell with your packages.
nix-shell -p <package>

# Search nix package
nix search nixpkgs <package>

# Run a flake from a remote project.
nix run github:<owner>/<repo>

% nix, elf

# Patch interpreter of a binary to be NixOS supported.
; See https://rootknecht.net/blog/patching-binaries-for-nixos/
patchelf --set-interpreter $(patchelf --print-interpreter `which find`) <binary_file>

# Check missing libraries of a binary.
ldd <binary_file> | grep 'not found'

$ binary_file: find . -maxdepth 1 -type f | sed 's~./~~'
